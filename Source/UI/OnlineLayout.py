from dublib.Engine.GetText import _
from dublib.TelebotUtils.Users import UsersManager
from dublib.TelebotUtils import TeleMaster
from dublib.TelebotUtils.Cache import RealCachedFile

from Source.InlineKeyboards import InlineKeyboards

from telebot import TeleBot, types

#==========================================================================================#
# >>>>> INLINE_KEYBOARDS <<<<< #
#==========================================================================================#

def end_layout() -> types.InlineKeyboardMarkup:
	"""
	–°—Ç—Ä–æ–∏—Ç Inline-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:
		–í–∑—è—Ç—å —Ä–∞—Å–∫–ª–∞–¥ —É –ú–∞—Å—Ç–µ—Ä–∞ üî•
		–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ —Ä–∞—Å–∫–ª–∞–¥!

	:return: keyboard
	:rtype: types.InlineKeyboardMarkup
	"""
	Menu = types.InlineKeyboardMarkup()

	energy_exchange = types.InlineKeyboardButton(_("–í–∑—è—Ç—å —Ä–∞—Å–∫–ª–∞–¥ —É –ú–∞—Å—Ç–µ—Ä–∞ üî•"), callback_data = "send_order_layout")
	mailing_card_day = types.InlineKeyboardButton(_("–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ —Ä–∞—Å–∫–ª–∞–¥!"), callback_data = "send_main_menu")

	Menu.add(energy_exchange, mailing_card_day, row_width= 1) 

	return Menu

#==========================================================================================#
# >>>>> DECORATORS <<<<< #
#==========================================================================================#

class Decorators:
	"""
	–ù–∞–±–æ—Ä –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤
	"""

	def inline_keyboards(self, bot: TeleBot, users: UsersManager, StartAnimation: RealCachedFile):
		"""
		–û–±—Ä–∞–±–æ—Ç–∫–∞ inline_keyboards.

		:param bot: Telegram bot.
		:type bot: TeleBot
		:param users: –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
		:type users: UsersManager
		:param StartAnimation: –î–∞–Ω–Ω—ã–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏.
		:type StartAnimation: RealCachedFile
		"""

		@bot.callback_query_handler(func = lambda Callback: Callback.data == "send_main_menu")
		def send_main_menu(Call: types.CallbackQuery):
			User = users.auth(Call.from_user)
			bot.answer_callback_query(Call.id)
			bot.send_animation(
				Call.message.chat.id,
				animation = StartAnimation.file_id,
				caption = None,
				parse_mode = "HTML",
				reply_markup = InlineKeyboards.main_menu()
				)
			
		@bot.callback_query_handler(func = lambda Callback: Callback.data == "send_order_layout")
		def send_order_layout(Call: types.CallbackQuery):
			User = users.auth(Call.from_user)
			bot.answer_callback_query(Call.id)
			bot.send_animation(
				chat_id = Call.message.chat.id,
				animation = StartAnimation.file_id,
				caption = "<b>" + _("–†–ê–°–ö–õ–ê–î –û–¢ –ú–ê–°–¢–ï–†–ê") + "</b>",
				parse_mode = "HTML",
				reply_markup = InlineKeyboards.SendOrderLayout()
				)
			
class Layout:
	"""
	–†–∞—Å–∫–ª–∞–¥ –æ—Ç —è–∑—ã–∫–æ–≤–æ–π –º–æ–¥–µ–ª–∏
	"""

	@property
	def decorators(self) -> Decorators:
		"""–ù–∞–±–æ—Ä—ã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤."""

		return self.__Decorators

	def __init__(self):
		"""–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."""

		#---> –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤.
		#==========================================================================================#
		self.__Decorators = Decorators()