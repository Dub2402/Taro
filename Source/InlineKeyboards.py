from telebot import types

from dublib.Engine.GetText import _

class InlineKeyboards:

	def ChoiceFunction(self, Target: str):

		Functions = {
			self.SendMainMenu.__name__: self.SendMainMenu,
			self.SendTypeCard.__name__: self.SendTypeCard,
			self.SendFirstCups.__name__: self.SendFirstCups,
			self.SendSecondCups.__name__: self.SendSecondCups,
			self.SendFirstSwords.__name__: self.SendFirstSwords,
			self.SendSecondSwords.__name__: self.SendSecondSwords,
			self.SendFirstWands.__name__: self.SendFirstWands,
			self.SendSecondWands.__name__: self.SendSecondWands,
			self.SendFirstPentacles.__name__: self.SendFirstPentacles,
			self.SendSecondPentacles.__name__: self.SendSecondPentacles,
			self.SendFirstArcanas.__name__: self.SendFirstArcanas,
			self.SendSecondArcanas.__name__: self.SendSecondArcanas,
			self.SendThirdArcanas.__name__: self.SendThirdArcanas,
			self.SendValueCard.__name__: self.SendValueCard
		}

		return Functions[Target]()
	
	def AddShare(self) -> types.InlineKeyboardMarkup:
		Menu = types.InlineKeyboardMarkup()

		Share = types.InlineKeyboardButton(
			_("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"), 
			switch_inline_query = _('\n@Taro100_bot\n@Taro100_bot\n\n**–¢–∞—Ä–æ–±–æ—Ç | –†–∞—Å–∫–ª–∞–¥ –æ–Ω–ª–∞–π–Ω | –ö–∞—Ä—Ç–∞ –¥–Ω—è**\n–ë–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤—Å–µ —Ç–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã ‚ùì‚ùì‚ùì\n\n__–ü–æ–ª—å–∑—É–π—Å—è –∏ –¥–µ–ª–∏—Å—å —Å –¥—Ä—É–∑—å—è–º–∏!__')
			)
		
		Menu.add(Share)

		return Menu
		
	def SendMainMenu(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		CardDay = types.InlineKeyboardButton(_("–ö–∞—Ä—Ç–∞ –¥–Ω—è"), callback_data = "Card_Day")
		ValueCard = types.InlineKeyboardButton(_("–ó–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Ä—Ç"), callback_data = "Value_Card")
		OrderLayout = types.InlineKeyboardButton(_("–†–∞—Å–∫–ª–∞–¥ –æ—Ç –ú–∞—Å—Ç–µ—Ä–∞ ‚ô®Ô∏è"), callback_data = "Order_Layout")
		Online_layout = types.InlineKeyboardButton(_("–û–Ω–ª–∞–π–Ω —Ä–∞—Å–∫–ª–∞–¥"), callback_data = "Online_Layout")
		All_Taro = types.InlineKeyboardButton(_("–í—Å—ë –æ –¢–∞—Ä–æ"), callback_data = "All_Taro")
	
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(CardDay, All_Taro, ValueCard, Online_layout, OrderLayout, row_width= 1) 

		return Menu
	
	def SendAllTaro(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		History = types.InlineKeyboardButton(_("–ò—Å—Ç–æ—Ä–∏—è –¢–∞—Ä–æ"), url = "https://tarolog.me/taro/history.html")
		What_is = types.InlineKeyboardButton(_("–ß—Ç–æ —Ç–∞–∫–æ–µ –¢–∞—Ä–æ?"),url = "https://tarolog.me/taro/determination.html")
		Work_with = types.InlineKeyboardButton(_("–†–∞–±–æ—Ç–∞ —Å –∫–∞—Ä—Ç–∞–º–∏"), url = "https://tarolog.me/taro/work.html")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendMainMenu")
	
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(History, What_is, Work_with, Back, row_width= 1) 

		return Menu

	def Subscribtion(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		Subscribe = types.InlineKeyboardButton(_("–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è!"), callback_data = "Subscribe")
	
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Subscribe, row_width= 1) 

		return Menu
	
	def notifications(self) -> types.InlineKeyboardMarkup:

		Menu = types.InlineKeyboardMarkup()
		No = types.InlineKeyboardButton(_("–ù–µ—Ç"), callback_data = "notifications_no")
		Yes = types.InlineKeyboardButton(_("–î–∞"), callback_data = "notifications_yes")
		Menu.add(No, Yes, row_width = 2)
		
		return Menu

	def SendTypeCard(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		Cups = types.InlineKeyboardButton(_("üèÜ –ö—É–±–∫–∏"), callback_data = "Cups")
		Swords = types.InlineKeyboardButton(_("‚öîÔ∏è –ú–µ—á–∏"), callback_data = "Swords")
		Wands = types.InlineKeyboardButton(_("üéã –ñ–µ–∑–ª—ã"), callback_data = "Wands")
		Pentacles = types.InlineKeyboardButton(_("ü™ô –ü–µ–Ω—Ç–∞–∫–ª–∏"), callback_data = "Pentacles")
		Arcanas = types.InlineKeyboardButton(_("üÉè –°—Ç–∞—Ä—à–∏–µ –∞—Ä–∫–∞–Ω—ã"), callback_data = "Arcanas")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendMainMenu")
	
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Cups, Swords, Wands, Pentacles, Arcanas, Back, row_width= 1) 

		return Menu

	def SendFirstCups(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		AceCups = types.InlineKeyboardButton(_("1. –¢—É–∑ –∫—É–±–∫–æ–≤"), callback_data = "Cups_1")
		TwoCups = types.InlineKeyboardButton(_("2. –î–≤–æ–π–∫–∞ –∫—É–±–∫–æ–≤"), callback_data = "Cups_2")
		ThreeCups = types.InlineKeyboardButton(_("3. –¢—Ä–æ–π–∫–∞ –∫—É–±–∫–æ–≤"), callback_data = "Cups_3")
		FourCups = types.InlineKeyboardButton(_("4. –ß–µ—Ç–≤–µ—Ä–∫–∞ –∫—É–±–∫–æ–≤"), callback_data = "Cups_4")
		FiveCups = types.InlineKeyboardButton(_("5. –ü—è—Ç–µ—Ä–∫–∞ –∫—É–±–∫–æ–≤"), callback_data = "Cups_5")
		SixCups = types.InlineKeyboardButton(_("6. –®–µ—Å—Ç–µ—Ä–∫–∞ –∫—É–±–∫–æ–≤"), callback_data = "Cups_6")
		SevenCups = types.InlineKeyboardButton(_("7. –°–µ–º–µ—Ä–∫–∞ –∫—É–±–∫–æ–≤"), callback_data = "Cups_7")
		Further = types.InlineKeyboardButton(_("–î–∞–ª–µ–µ ‚ñ∂Ô∏è"), callback_data = "Further_SendSecondCups")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendTypeCard")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(AceCups, TwoCups, ThreeCups, FourCups, FiveCups, SixCups, SevenCups, Further, Back, row_width= 1) 

		return Menu

	def SendSecondCups(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		EightCups = types.InlineKeyboardButton(_("8. –í–æ—Å—å–º–µ—Ä–∫–∞ –∫—É–±–∫–æ–≤"), callback_data = "Cups_8")
		NineCups = types.InlineKeyboardButton(_("9. –î–µ–≤—è—Ç–∫–∞ –∫—É–±–∫–æ–≤"), callback_data = "Cups_9")
		TenCups = types.InlineKeyboardButton(_("10. –î–µ—Å—è—Ç–∫–∞ –∫—É–±–∫–æ–≤"), callback_data = "Cups_10")
		PageCups = types.InlineKeyboardButton(_("11. –ü–∞–∂ –∫—É–±–∫–æ–≤"), callback_data = "Cups_11")
		KnightCups = types.InlineKeyboardButton(_("12. –†—ã—Ü–∞—Ä—å –∫—É–±–∫–æ–≤"), callback_data = "Cups_12")
		QueenCups = types.InlineKeyboardButton(_("13. –ö–æ—Ä–æ–ª–µ–≤–∞ –∫—É–±–∫–æ–≤"), callback_data = "Cups_13")
		KingCups = types.InlineKeyboardButton(_("14. –ö–æ—Ä–æ–ª—å –∫—É–±–∫–æ–≤"), callback_data = "Cups_14")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendFirstCups")
		BackTypeCard = types.InlineKeyboardButton(_("‚è™Ô∏è –ö –º–∞—Å—Ç—è–º"), callback_data = "Back_SendTypeCard")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(EightCups, NineCups, TenCups, PageCups, KnightCups, QueenCups, KingCups, Back, BackTypeCard, row_width= 1) 

		return Menu

	def SendFirstSwords(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		AceSwords = types.InlineKeyboardButton(_("1. –¢—É–∑ –º–µ—á–µ–π"), callback_data = "Swords_1")
		TwoSwords = types.InlineKeyboardButton(_("2. –î–≤–æ–π–∫–∞ –º–µ—á–µ–π"), callback_data = "Swords_2")
		ThreeSwords = types.InlineKeyboardButton(_("3. –¢—Ä–æ–π–∫–∞ –º–µ—á–µ–π"), callback_data = "Swords_3")
		FourSwords = types.InlineKeyboardButton(_("4. –ß–µ—Ç–≤–µ—Ä–∫–∞ –º–µ—á–µ–π"), callback_data = "Swords_4")
		FiveSwords = types.InlineKeyboardButton(_("5. –ü—è—Ç–µ—Ä–∫–∞ –º–µ—á–µ–π"), callback_data = "Swords_5")
		SixSwords = types.InlineKeyboardButton(_("6. –®–µ—Å—Ç–µ—Ä–∫–∞ –º–µ—á–µ–π"), callback_data = "Swords_6")
		SevenSwords = types.InlineKeyboardButton(_("7. –°–µ–º–µ—Ä–∫–∞ –º–µ—á–µ–π"), callback_data = "Swords_7")
		Further = types.InlineKeyboardButton(_("–î–∞–ª–µ–µ ‚ñ∂Ô∏è"), callback_data = "Further_SendSecondSwords")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendTypeCard")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(AceSwords, TwoSwords, ThreeSwords, FourSwords, FiveSwords, SixSwords, SevenSwords, Further, Back, row_width= 1) 

		return Menu
	
	def SendSecondSwords(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		EightSwords = types.InlineKeyboardButton(_("8. –í–æ—Å—å–º–µ—Ä–∫–∞ –º–µ—á–µ–π"), callback_data = "Swords_8")
		NineSwords = types.InlineKeyboardButton(_("9. –î–µ–≤—è—Ç–∫–∞ –º–µ—á–µ–π"), callback_data = "Swords_9")
		TenSwords = types.InlineKeyboardButton(_("10. –î–µ—Å—è—Ç–∫–∞ –º–µ—á–µ–π"), callback_data = "Swords_10")
		PageSwords = types.InlineKeyboardButton(_("11. –ü–∞–∂ –º–µ—á–µ–π"), callback_data = "Swords_11")
		KnightSwords = types.InlineKeyboardButton(_("12. –†—ã—Ü–∞—Ä—å –º–µ—á–µ–π"), callback_data = "Swords_12")
		QueenSwords = types.InlineKeyboardButton(_("13. –ö–æ—Ä–æ–ª–µ–≤–∞ –º–µ—á–µ–π"), callback_data = "Swords_13")
		KingSwords = types.InlineKeyboardButton(_("14. –ö–æ—Ä–æ–ª—å –º–µ—á–µ–π"), callback_data = "Swords_14")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendFirstSwords")
		BackTypeCard = types.InlineKeyboardButton(_("‚è™Ô∏è –ö –º–∞—Å—Ç—è–º"), callback_data = "Back_SendTypeCard")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(EightSwords, NineSwords, TenSwords, PageSwords, KnightSwords, QueenSwords, KingSwords, Back, BackTypeCard, row_width= 1) 

		return Menu

	def SendFirstWands(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		AceWands = types.InlineKeyboardButton(_("1. –¢—É–∑ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_1")
		TwoWands = types.InlineKeyboardButton(_("2. –î–≤–æ–π–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_2")
		ThreeWands = types.InlineKeyboardButton(_("3. –¢—Ä–æ–π–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_3")
		FourWands = types.InlineKeyboardButton(_("4. –ß–µ—Ç–≤–µ—Ä–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_4")
		FiveWands = types.InlineKeyboardButton(_("5. –ü—è—Ç–µ—Ä–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_5")
		SixWands = types.InlineKeyboardButton(_("6. –®–µ—Å—Ç–µ—Ä–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_6")
		SevenWands = types.InlineKeyboardButton(_("7. –°–µ–º–µ—Ä–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_7")
		Further = types.InlineKeyboardButton(_("–î–∞–ª–µ–µ ‚ñ∂Ô∏è"), callback_data = "Further_SendSecondWands")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendTypeCard")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(AceWands, TwoWands, ThreeWands, FourWands, FiveWands, SixWands, SevenWands, Further, Back, row_width= 1) 

		return Menu
	
	def SendSecondWands(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		EightWands = types.InlineKeyboardButton(_("8. –í–æ—Å—å–º–µ—Ä–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_8")
		NineWands = types.InlineKeyboardButton(_("9. –î–µ–≤—è—Ç–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_9")
		TenWands = types.InlineKeyboardButton(_("10. –î–µ—Å—è—Ç–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_10")
		PageWands = types.InlineKeyboardButton(_("11. –ü–∞–∂ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_11")
		KnightWands = types.InlineKeyboardButton(_("12. –†—ã—Ü–∞—Ä—å –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_12")
		QueenWands = types.InlineKeyboardButton(_("13. –ö–æ—Ä–æ–ª–µ–≤–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_13")
		KingWands = types.InlineKeyboardButton(_("14. –ö–æ—Ä–æ–ª—å –∂–µ–∑–ª–æ–≤"), callback_data = "Wands_14")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendFirstWands")
		BackTypeCard = types.InlineKeyboardButton(_("‚è™Ô∏è –ö –º–∞—Å—Ç—è–º"), callback_data = "Back_SendTypeCard")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(EightWands, NineWands, TenWands, PageWands, KnightWands, QueenWands, KingWands, Back, BackTypeCard, row_width= 1) 

		return Menu

	def SendFirstPentacles(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		AcePentacles = types.InlineKeyboardButton(_("1. –¢—É–∑ –ø–µ–Ω—Ç–∞–∫–ª–µ–π"), callback_data = "Pentacles_1")
		TwoPentacles = types.InlineKeyboardButton(_("2. –î–≤–æ–π–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π"), callback_data = "Pentacles_2")
		ThreePentacles = types.InlineKeyboardButton(_("3. –¢—Ä–æ–π–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π"), callback_data = "Pentacles_3")
		FourPentacles = types.InlineKeyboardButton(_("4. –ß–µ—Ç–≤–µ—Ä–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π"), callback_data = "Pentacles_4")
		FivePentacles = types.InlineKeyboardButton(_("5. –ü—è—Ç–µ—Ä–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π"), callback_data = "Pentacles_5")
		SixPentacles = types.InlineKeyboardButton(_("6. –®–µ—Å—Ç–µ—Ä–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π"), callback_data = "Pentacles_6")
		SevenPentacles = types.InlineKeyboardButton(_("7. –°–µ–º–µ—Ä–∫–∞ –ø–µ–Ω—Ç–∞–∫–ª–µ–π"), callback_data = "Pentacles_7")
		Further = types.InlineKeyboardButton(_("–î–∞–ª–µ–µ ‚ñ∂Ô∏è"), callback_data = "Further_SendSecondPentacles")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendTypeCard")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(AcePentacles, TwoPentacles, ThreePentacles, FourPentacles, FivePentacles, SixPentacles, SevenPentacles, Further, Back, row_width= 1) 

		return Menu	

	def SendSecondPentacles(self) -> types.InlineKeyboardMarkup:

		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		EightPentacles = types.InlineKeyboardButton(_("8. –í–æ—Å—å–º–µ—Ä–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Pentacles_8")
		NinePentacles = types.InlineKeyboardButton(_("9. –î–µ–≤—è—Ç–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Pentacles_9")
		TenPentacles = types.InlineKeyboardButton(_("10. –î–µ—Å—è—Ç–∫–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Pentacles_10")
		PagePentacles = types.InlineKeyboardButton(_("11. –ü–∞–∂ –∂–µ–∑–ª–æ–≤"), callback_data = "Pentacles_11")
		KnightPentacles = types.InlineKeyboardButton(_("12. –†—ã—Ü–∞—Ä—å –∂–µ–∑–ª–æ–≤"), callback_data = "Pentacles_12")
		QueenPentacles = types.InlineKeyboardButton(_("13. –ö–æ—Ä–æ–ª–µ–≤–∞ –∂–µ–∑–ª–æ–≤"), callback_data = "Pentacles_13")
		KingPentacles = types.InlineKeyboardButton(_("14. –ö–æ—Ä–æ–ª—å –∂–µ–∑–ª–æ–≤"), callback_data = "Pentacles_14")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendFirstPentacles")
		BackTypeCard = types.InlineKeyboardButton(_("‚è™Ô∏è –ö –º–∞—Å—Ç—è–º"), callback_data = "Back_SendTypeCard")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(EightPentacles, NinePentacles, TenPentacles, PagePentacles, KnightPentacles, QueenPentacles, KingPentacles, Back, BackTypeCard, row_width= 1) 

		return Menu
	
	def SendFirstArcanas(self) -> types.InlineKeyboardMarkup:
		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫.
		Fool = types.InlineKeyboardButton(_("0. –®—É—Ç"), callback_data = "Arcanas_0")
		Mage = types.InlineKeyboardButton(_("‚Ö†. –ú–∞–≥"), callback_data = "Arcanas_I")
		HighPriestess = types.InlineKeyboardButton(_("‚Ö°. –í–µ—Ä—Ö–æ–≤–Ω–∞—è –∂—Ä–∏—Ü–∞"), callback_data = "Arcanas_II")
		Empress = types.InlineKeyboardButton(_("‚Ö¢. –ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞"), callback_data = "Arcanas_III")
		Emperor = types.InlineKeyboardButton(_("‚Ö£. –ò–º–ø–µ—Ä–∞—Ç–æ—Ä"), callback_data = "Arcanas_IV")
		HighPriest = types.InlineKeyboardButton(_("‚Ö§. –í–µ—Ä—Ö–æ–≤–Ω—ã–π –∂—Ä–µ—Ü"), callback_data = "Arcanas_V")
		Lovers = types.InlineKeyboardButton(_("‚Ö•. –í–ª—é–±–ª–µ–Ω–Ω—ã–µ"), callback_data = "Arcanas_VI")
		Further = types.InlineKeyboardButton(_("–î–∞–ª–µ–µ ‚ñ∂Ô∏è"), callback_data = "Further_SendSecondArcanas")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendTypeCard")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Fool, Mage, HighPriestess, Empress, Emperor, HighPriest, Lovers, Further, Back, row_width= 1) 

		return Menu	
	
	def SendSecondArcanas(self) -> types.InlineKeyboardMarkup:

		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		Chariot = types.InlineKeyboardButton(_("‚Ö¶. –ö–æ–ª–µ—Å–Ω–∏—Ü–∞"), callback_data = "Arcanas_VII")
		Justice = types.InlineKeyboardButton(_("‚Öß. –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å"), callback_data = "Arcanas_VIII")
		Hermit = types.InlineKeyboardButton(_("‚Ö®. –û—Ç—à–µ–ª—å–Ω–∏–∫"), callback_data = "Arcanas_IX")
		WheelFortune = types.InlineKeyboardButton(_("‚Ö©. –ö–æ–ª–µ—Å–æ –§–æ—Ä—Ç—É–Ω—ã"), callback_data = "Arcanas_X")
		Strength = types.InlineKeyboardButton(_("‚Ö™. –°–∏–ª–∞"), callback_data = "Arcanas_XI")
		Hanged = types.InlineKeyboardButton(_("‚Ö´. –ü–æ–≤–µ—à–µ–Ω–Ω—ã–π"), callback_data = "Arcanas_XII")
		Death = types.InlineKeyboardButton(_("‚Ö©‚Ö¢. –°–º–µ—Ä—Ç—å"), callback_data = "Arcanas_XIII")
		Further = types.InlineKeyboardButton(_("–î–∞–ª–µ–µ ‚ñ∂Ô∏è"), callback_data = "Further_SendThirdArcanas")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendFirstArcanas")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Chariot, Justice, Hermit, WheelFortune, Strength, Hanged, Death, Further, Back, row_width= 1) 

		return Menu
	
	def SendThirdArcanas(self) -> types.InlineKeyboardMarkup:

		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		Temperance = types.InlineKeyboardButton(_("‚Ö©‚Ö£. –£–º–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å"), callback_data = "Arcanas_XIV")
		Devil = types.InlineKeyboardButton(_("‚Ö©‚Ö§. –î—å—è–≤–æ–ª"), callback_data = "Arcanas_XV")
		Tower = types.InlineKeyboardButton(_("‚Ö©‚Ö•. –ë–∞—à–Ω—è"), callback_data = "Arcanas_XVI")
		Star = types.InlineKeyboardButton(_("‚Ö©‚Ö¶. –ó–≤–µ–∑–¥–∞"), callback_data = "Arcanas_XVII")
		Moon = types.InlineKeyboardButton(_("‚Ö©‚Öß. –õ—É–Ω–∞"), callback_data = "Arcanas_XVIII")
		Sun = types.InlineKeyboardButton(_("‚Ö©‚Ö®. –°–æ–ª–Ω—Ü–µ"), callback_data = "Arcanas_XIX")
		Court = types.InlineKeyboardButton(_("‚Ö©‚Ö©. –°—É–¥"), callback_data = "Arcanas_XX")
		World = types.InlineKeyboardButton(_("‚Ö©‚Ö™. –ú–∏—Ä"), callback_data = "Arcanas_XXI")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendSecondArcanas")
		BackTypeCard = types.InlineKeyboardButton(_("‚è™Ô∏è –ö –º–∞—Å—Ç—è–º"), callback_data = "Back_SendTypeCard")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Temperance, Devil, Tower, Star, Moon, Sun, Court, World, Back, BackTypeCard, row_width= 1) 

		return Menu
	
	def SendValueCard(self) -> types.InlineKeyboardMarkup:

		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		GeneralMeaning = types.InlineKeyboardButton(_("1. –û–±—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"), callback_data = "GeneralMeaning")
		PersonalState  = types.InlineKeyboardButton(_("2. –õ–∏—á–Ω–æ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ"), callback_data = "PersonalState")
		DeepLevel = types.InlineKeyboardButton(_("3. –ù–∞ –≥–ª—É–±–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ"), callback_data = "DeepLevel")
		WorkCareer = types.InlineKeyboardButton(_("4. –í —Ä–∞–±–æ—Ç–µ –∏ –∫–∞—Ä—å–µ—Ä–µ"), callback_data = "WorkCareer")
		Finance = types.InlineKeyboardButton(_("5. –í —Ñ–∏–Ω–∞–Ω—Å–∞—Ö"), callback_data = "Finance")
		Love = types.InlineKeyboardButton(_("6. –í –ª—é–±–æ–≤–Ω–æ–π —Å—Ñ–µ—Ä–µ"), callback_data = "Love")
		HealthStatus  = types.InlineKeyboardButton(_("7. –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è"), callback_data = "HealthStatus")
		Inverted = types.InlineKeyboardButton(_("8. –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞—è –∫–∞—Ä—Ç–∞"), callback_data = "Inverted")
		Back = types.InlineKeyboardButton(_("–ù–∞–∑–∞–¥"), callback_data = "Back")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(GeneralMeaning, PersonalState, DeepLevel, WorkCareer, Finance, Love, HealthStatus, Inverted, Back, row_width= 1) 

		return Menu

	def SendOrderLayout(self) -> types.InlineKeyboardMarkup:

		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		PersonalLife  = types.InlineKeyboardButton(_("üíî –õ–∏—á–Ω–∞—è –∂–∏–∑–Ω—å"), url = "https://t.me/m/XVa5Zsn0OTli")
		NearFuture  = types.InlineKeyboardButton(_("üí´ –ë–ª–∏–∂–∞–π—à–µ–µ –±—É–¥—É—â–µ–µ"), url = "https://t.me/m/6cDunvn0ZThi")
		FarFuture  = types.InlineKeyboardButton(_("üßø –î–∞–ª—å–Ω–µ–µ –±—É–¥—É—â–µ–µ"), url = "https://t.me/m/_1rfsRNfY2Ri")
		WorkCareer = types.InlineKeyboardButton(_("üíº –ö–∞—Ä—å–µ—Ä–∞ –∏ —Ä–∞–±–æ—Ç–∞"), url = "https://t.me/m/o4AQSvQ_NGIy")
		Finance  = types.InlineKeyboardButton(_("üíµ –§–∏–Ω–∞–Ω—Å—ã"), url = "https://t.me/m/3JgIK6ycYjVi")
		BlackStripe  = types.InlineKeyboardButton(_("üò≠ –ß—ë—Ä–Ω–∞—è –ø–æ–ª–æ—Å–∞"), url = "https://t.me/m/5Dr14DlUNGUy")
		YourQuestion = types.InlineKeyboardButton(_("ü§î –°–≤–æ–π –≤–æ–ø—Ä–æ—Å"), url = "https://t.me/m/jIn3AGYkNmNi")
		Back = types.InlineKeyboardButton(_("‚óÄÔ∏è –ù–∞–∑–∞–¥"), callback_data = "Back_SendMainMenu")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(PersonalLife, NearFuture, FarFuture, WorkCareer, Finance, BlackStripe, YourQuestion, Back, row_width= 1) 

		return Menu

	def SendBack(self) -> types.InlineKeyboardMarkup:

		# –ö–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é.
		Menu = types.InlineKeyboardMarkup()

		Back = types.InlineKeyboardButton(_("–ù–∞–∑–∞–¥"), callback_data = f"Back_SendValueCard")

		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é.
		Menu.add(Back, row_width= 1) 

		return Menu